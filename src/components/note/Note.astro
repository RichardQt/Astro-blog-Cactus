---
import { type CollectionEntry, render } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	note: CollectionEntry<"note">;
	isPreview?: boolean | undefined;
};

const { as: Tag = "div", note, isPreview = false } = Astro.props;
const { Content } = await render(note);
---

<article
	class:list={[
		isPreview && "inline-grid rounded-md bg-[rgb(240,240,240)] px-4 py-3 dark:bg-[rgb(33,35,38)]",
	]}
	data-pagefind-body={isPreview ? false : true}
>
	<Tag class="title" class:list={{ "text-base": isPreview }}>
		{
			isPreview ? (
				<a class="cactus-link" href={`/notes/${note.id}/`}>
					{note.data.title}
				</a>
			) : (
				<>{note.data.title}</>
			)
		}
	</Tag>
	<!-- 修改：narrow 年月日 -->
	<FormattedDate
		dateTimeOptions={{
			hour: "2-digit",
			minute: "2-digit",
			year: "numeric",
			month: "narrow",
			day: "2-digit",
		}}
		date={note.data.publishDate}
	/>
	{
		isPreview ? (
			<div class="prose prose-sm prose-cactus mt-4 max-w-none overflow-hidden [&>p:last-of-type]:mb-0">
				<div class="relative max-h-[150px] overflow-hidden">
					<Content />
					<div class="absolute bottom-0 left-0 right-0 h-12 bg-gradient-to-t from-[rgb(240,240,240)] dark:from-[rgb(33,35,38)]" />
				</div>
				<div class="mt-2">
					<a class="text-sm font-medium text-accent" href={`/notes/${note.id}/`}>
						阅读更多...
					</a>
				</div>
			</div>
		) : (
			<div class="prose prose-sm prose-cactus mt-4 max-w-none [&>p:last-of-type]:mb-0">
				<Content />
			</div>
		)
	}
</article>
