---
import { type CollectionEntry, render } from "astro:content";

import Masthead from "@/components/blog/Masthead.astro";
import TOC from "@/components/blog/TOC.astro";
// import WebMentions from "@/components/blog/webmentions/index.astro";
import PostComments from "@/components/PostComments.astro";

import BaseLayout from "./Base.astro";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const { ogImage, title, description, updatedDate, publishDate } = post.data;
const socialImage = ogImage ?? `/og-image/${post.id}.png`;
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString();
const { headings } = await render(post);
---

<BaseLayout
	meta={{
		articleDate,
		description,
		ogImage: socialImage,
		title,
	}}
>
	<div class="gap-x-10 lg:flex lg:items-start">
		{!!headings.length && <TOC headings={headings} />}
		<article class="flex-grow break-words" data-pagefind-body>
			<div id="blog-hero"><Masthead content={post} /></div>
			<div
				class="prose prose-base mx-auto mt-12 max-w-3xl dark:prose-invert prose-headings:font-sans prose-headings:text-accent-2 prose-h1:text-4xl prose-h1:font-bold prose-h2:text-3xl prose-h2:font-bold prose-h3:text-2xl prose-h3:font-semibold prose-h4:text-xl prose-h4:font-semibold prose-h5:text-lg prose-h5:font-medium prose-h6:text-base prose-h6:font-medium prose-a:text-accent-2 prose-a:decoration-accent-2 prose-a:decoration-1 hover:prose-a:text-accent hover:prose-a:decoration-accent prose-blockquote:border-l-4 prose-blockquote:border-accent-2 prose-blockquote:bg-accent/5 prose-blockquote:px-4 prose-blockquote:py-1 prose-blockquote:not-italic prose-strong:text-accent-2 prose-em:text-accent-2 prose-code:rounded prose-code:bg-accent/10 prose-code:px-1 prose-code:py-0.5 prose-code:text-accent-2 prose-code:before:content-none prose-code:after:content-none prose-pre:rounded-lg prose-pre:bg-[#1d1f21] prose-pre:shadow-md prose-li:marker:text-accent-2 prose-table:border-collapse prose-th:border prose-th:border-accent/20 prose-th:bg-accent/5 prose-th:p-2 prose-td:border prose-td:border-accent/20 prose-td:p-2 prose-img:rounded-lg prose-img:shadow-md prose-hr:border-accent/20 [&_*]:no-underline"
			>
				<slot />
				<!-- <WebMentions /> -->
				<PostComments />
			</div>
		</article>
	</div>
	<button
		aria-label="Back to Top"
		class="z-90 fixed bottom-8 end-4 flex h-10 w-10 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-zinc-200 text-3xl opacity-0 transition-all duration-300 hover:border-link data-[show=true]:translate-y-0 data-[show=true]:opacity-100 dark:bg-zinc-700 sm:end-8 sm:h-12 sm:w-12"
		data-show="false"
		id="to-top-btn"
		><svg
			aria-hidden="true"
			class="h-6 w-6"
			fill="none"
			focusable="false"
			stroke="currentColor"
			stroke-width="2"
			viewBox="0 0 24 24"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path d="M4.5 15.75l7.5-7.5 7.5 7.5" stroke-linecap="round" stroke-linejoin="round"></path>
		</svg>
	</button>
</BaseLayout>

<script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>
